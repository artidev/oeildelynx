/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/audit/AuditContextHolder.p.vm.java
 */
package com.artidev.oeildelynx.audit;

//import static org.apache.commons.lang.StringUtils.trimToNull;

import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;

import com.artidev.oeildelynx.context.UserContext;


/**
 * Enable/disable {@link PreUpdate} and {@link PrePersist} actions and/or force the username to be used.
 * Please note that you are in charge of reseting the context properties if you use them directly.
 */
public class AuditContextHolder {
    private static final ThreadLocal<Boolean> audit = new ThreadLocal<Boolean>();
    private static final ThreadLocal<String> username = new ThreadLocal<String>();

    public static void setAudit(boolean auditing) {
        audit.set(auditing);
    }

    /*public static void setUsername(String user) {
        username.set(trimToNull(user));
    }*/

    /**
     * Whether audit is enable ? Defaults to true.
     */
    public static boolean audit() {
        return audit.get() == null ? true : audit.get();
    }

    /**
     * The username bound to this thread or if it is null the username returned by the {@link UserContext};
     */
    public static String username() {
        return username.get() == null ? UserContext.getUsername() : username.get();
    }
}