/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 */
package com.artidev.oeildelynx.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.Objects;

@Entity
@Table(name = "decouverte_de_bien", uniqueConstraints = {
        @UniqueConstraint(name = "decouverte_de_bien_pk", columnNames = { "numero_decouverte", "numero_bien" }),
        @UniqueConstraint(name = "pk_decouverte_de_bien", columnNames = { "numero_decouverte", "numero_bien" }) })
public class DecouverteDeBien implements Identifiable<DecouverteDeBienPk>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(DecouverteDeBien.class);

    // Composite primary key
    private DecouverteDeBienPk id = new DecouverteDeBienPk();

    // Raw attributes
    private String etatBienDecouvert;

    // Many to one
    private Decouverte numeroDecouverte;
    private Biens numeroBien;

    // -----------------------
    // Composite Primary Key
    // -----------------------

    /**
     * Returns the composite primary key.
     */
    @Override
    @EmbeddedId
    public DecouverteDeBienPk getId() {
        return id;
    }

    /**
     * Set the composite primary key.
     * @param id the composite primary key.
     */
    @Override
    public void setId(DecouverteDeBienPk id) {
        this.id = id;
    }

    public DecouverteDeBien id(DecouverteDeBienPk id) {
        setId(id);
        return this;
    }

    /**
     * Tells whether or not this instance has a non empty composite primary key set.
     * @return true if a non empty primary key is set, false otherwise
     */
    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return getId() != null && getId().areFieldsSet();
    }

    // -- [etatBienDecouvert] ------------------------

    @Size(max = 10)
    @Column(name = "etat_bien_decouvert", length = 10)
    public String getEtatBienDecouvert() {
        return etatBienDecouvert;
    }

    public void setEtatBienDecouvert(String etatBienDecouvert) {
        this.etatBienDecouvert = etatBienDecouvert;
    }

    public DecouverteDeBien etatBienDecouvert(String etatBienDecouvert) {
        setEtatBienDecouvert(etatBienDecouvert);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: DecouverteDeBien.numeroDecouverte ==> Decouverte.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "numero_decouverte", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    @MapsId(value = "numeroDecouverte")
    public Decouverte getNumeroDecouverte() {
        return numeroDecouverte;
    }

    /**
     * Set the {@link #numeroDecouverte} without adding this DecouverteDeBien instance on the passed {@link #numeroDecouverte}
     */
    public void setNumeroDecouverte(Decouverte numeroDecouverte) {
        this.numeroDecouverte = numeroDecouverte;
    }

    public DecouverteDeBien numeroDecouverte(Decouverte numeroDecouverte) {
        setNumeroDecouverte(numeroDecouverte);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: DecouverteDeBien.numeroBien ==> Biens.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "numero_bien", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    @MapsId(value = "numeroBien")
    public Biens getNumeroBien() {
        return numeroBien;
    }

    /**
     * Set the {@link #numeroBien} without adding this DecouverteDeBien instance on the passed {@link #numeroBien}
     */
    public void setNumeroBien(Biens numeroBien) {
        this.numeroBien = numeroBien;
    }

    public DecouverteDeBien numeroBien(Biens numeroBien) {
        setNumeroBien(numeroBien);
        return this;
    }

    /**
     * Apply the default values.
     */
    public DecouverteDeBien withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof DecouverteDeBien && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this DecouverteDeBien instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add(DecouverteDeBien_.etatBienDecouvert.getName(), getEtatBienDecouvert()) //
                .toString();
    }
}