/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 */
package com.artidev.oeildelynx.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.Objects;

@Entity
@Table(name = "localite")
public class Localite implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Localite.class);

    // Raw attributes
    private Integer id;
    private String nomLocalite;

    // Many to one
    private Pays codePays;
    private Region codeRegion;
    private Localite locCodeLocalite;

    // -- [id] ------------------------

    @Override
    @Column(name = "code_localite", precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Localite id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [nomLocalite] ------------------------

    @Size(max = 30)
    @Column(name = "nom_localite", length = 30)
    public String getNomLocalite() {
        return nomLocalite;
    }

    public void setNomLocalite(String nomLocalite) {
        this.nomLocalite = nomLocalite;
    }

    public Localite nomLocalite(String nomLocalite) {
        setNomLocalite(nomLocalite);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Localite.codePays ==> Pays.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "code_pays", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Pays getCodePays() {
        return codePays;
    }

    /**
     * Set the {@link #codePays} without adding this Localite instance on the passed {@link #codePays}
     */
    public void setCodePays(Pays codePays) {
        this.codePays = codePays;
    }

    public Localite codePays(Pays codePays) {
        setCodePays(codePays);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Localite.codeRegion ==> Region.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "code_region")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Region getCodeRegion() {
        return codeRegion;
    }

    /**
     * Set the {@link #codeRegion} without adding this Localite instance on the passed {@link #codeRegion}
     */
    public void setCodeRegion(Region codeRegion) {
        this.codeRegion = codeRegion;
    }

    public Localite codeRegion(Region codeRegion) {
        setCodeRegion(codeRegion);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Localite.locCodeLocalite ==> Localite.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "loc_code_localite")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Localite getLocCodeLocalite() {
        return locCodeLocalite;
    }

    /**
     * Set the {@link #locCodeLocalite} without adding this Localite instance on the passed {@link #locCodeLocalite}
     */
    public void setLocCodeLocalite(Localite locCodeLocalite) {
        this.locCodeLocalite = locCodeLocalite;
    }

    public Localite locCodeLocalite(Localite locCodeLocalite) {
        setLocCodeLocalite(locCodeLocalite);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Localite withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Localite && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Localite instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add(Localite_.id.getName(), getId()) //
                .add(Localite_.nomLocalite.getName(), getNomLocalite()) //
                .toString();
    }
}