/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 */
package com.artidev.oeildelynx.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.DATE;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

//import com.artidev.oeildelynx.validation.FixedLength;
import com.google.common.base.Objects;

@Entity
@Table(name = "mandat")
public class Mandat implements Identifiable<String>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Mandat.class);

    // Raw attributes
    private String id;
    private Date dateMandat;
    private String archiveMandat;

    // Many to one
    private TypeMandant codeTypeMandar;
    private Condamnation numCondamnation;

    // -- [id] ------------------------

    @Override
    @Size(max = 25)
    @NotEmpty
    @Column(name = "numero_mandat", length = 25)
    @Id
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    public Mandat id(String id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null && !id.isEmpty();
    }

    // -- [dateMandat] ------------------------

    @Column(name = "date_mandat", length = 13)
    @Temporal(DATE)
    public Date getDateMandat() {
        return dateMandat;
    }

    public void setDateMandat(Date dateMandat) {
        this.dateMandat = dateMandat;
    }

    public Mandat dateMandat(Date dateMandat) {
        setDateMandat(dateMandat);
        return this;
    }

    // -- [archiveMandat] ------------------------

   // @FixedLength(length = 254)
    @Column(name = "archive_mandat", length = 254)
    public String getArchiveMandat() {
        return archiveMandat;
    }

    public void setArchiveMandat(String archiveMandat) {
        this.archiveMandat = archiveMandat;
    }

    public Mandat archiveMandat(String archiveMandat) {
        setArchiveMandat(archiveMandat);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Mandat.codeTypeMandar ==> TypeMandant.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "code_type_mandar", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public TypeMandant getCodeTypeMandar() {
        return codeTypeMandar;
    }

    /**
     * Set the {@link #codeTypeMandar} without adding this Mandat instance on the passed {@link #codeTypeMandar}
     */
    public void setCodeTypeMandar(TypeMandant codeTypeMandar) {
        this.codeTypeMandar = codeTypeMandar;
    }

    public Mandat codeTypeMandar(TypeMandant codeTypeMandar) {
        setCodeTypeMandar(codeTypeMandar);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Mandat.numCondamnation ==> Condamnation.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "num_condamnation")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Condamnation getNumCondamnation() {
        return numCondamnation;
    }

    /**
     * Set the {@link #numCondamnation} without adding this Mandat instance on the passed {@link #numCondamnation}
     */
    public void setNumCondamnation(Condamnation numCondamnation) {
        this.numCondamnation = numCondamnation;
    }

    public Mandat numCondamnation(Condamnation numCondamnation) {
        setNumCondamnation(numCondamnation);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Mandat withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Mandat && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Mandat instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add(Mandat_.id.getName(), getId()) //
                .add(Mandat_.dateMandat.getName(), getDateMandat()) //
                .add(Mandat_.archiveMandat.getName(), getArchiveMandat()) //
                .toString();
    }
}